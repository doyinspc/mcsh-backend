# Generated by Django 2.2.4 on 2019-08-31 10:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('password', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_permission', models.PositiveIntegerField(default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='None', max_length=100)),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fullname', models.CharField(max_length=120, verbose_name='name')),
                ('cardno', models.CharField(blank=True, max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('gender', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
            },
            bases=('main.user', models.Model),
            managers=[
                ('objects', main.managers.ClientManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fullname', models.CharField(blank=True, max_length=120, verbose_name='fullname')),
                ('profile', models.CharField(blank=True, max_length=1000, verbose_name='about')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photo')),
                ('empno', models.CharField(blank=True, max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_staff', models.PositiveIntegerField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Category')),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'employees',
            },
            bases=('main.user', models.Model),
            managers=[
                ('objects', main.managers.EmployeeManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('comment', models.CharField(blank=True, max_length=1000, verbose_name='comment')),
                ('is_booked', models.BooleanField(default=False, verbose_name='active')),
                ('is_paid', models.PositiveIntegerField(default=0)),
                ('duration', models.PositiveIntegerField(default=1)),
                ('date_booked', models.DateField(verbose_name='date booked')),
                ('time_booked', models.TimeField(verbose_name='time booked')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('bcardno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_booking_card', related_query_name='main_bookings', to='main.Client')),
                ('bempno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_booking_emp', related_query_name='main_bookings', to='main.Employee')),
            ],
        ),
    ]
